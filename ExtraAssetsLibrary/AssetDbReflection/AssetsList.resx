<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>